

================================================================
== Vitis HLS Report for 'inverse_clarke'
================================================================
* Date:           Fri Jan 28 22:28:22 2022

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        inverse_clarke
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.871 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |       10|       10|  50.000 ns|  50.000 ns|   11|   11|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.11>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tmp_4 = read i64 @_ssdm_op_Read.axis.volatile.i64P128A, i64 %idq" [C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/hls_stream_39.h:144]   --->   Operation 12 'read' 'tmp_4' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%id = trunc i64 %tmp_4" [inverse_clarke.cpp:15]   --->   Operation 13 'trunc' 'id' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%iq = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %tmp_4, i32 32, i32 63" [inverse_clarke.cpp:16]   --->   Operation 14 'partselect' 'iq' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_5 = read i16 @_ssdm_op_Read.axis.volatile.i16P128A, i16 %theta" [C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/hls_stream_39.h:144]   --->   Operation 15 'read' 'tmp_5' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%trunc_ln154 = trunc i16 %tmp_5" [C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/hls_stream_39.h:154]   --->   Operation 16 'trunc' 'trunc_ln154' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i6 @_ssdm_op_PartSelect.i6.i16.i32.i32, i16 %tmp_5, i32 10, i32 15" [inverse_clarke.cpp:18]   --->   Operation 17 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.42ns)   --->   "%icmp_ln18 = icmp_ne  i6 %tmp_3, i6 0" [inverse_clarke.cpp:18]   --->   Operation 18 'icmp' 'icmp_ln18' <Predicate = true> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.68ns)   --->   "%theta_clamped = select i1 %icmp_ln18, i10 1023, i10 %trunc_ln154" [inverse_clarke.cpp:18]   --->   Operation 19 'select' 'theta_clamped' <Predicate = true> <Delay = 0.68> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i10 %theta_clamped" [inverse_clarke.cpp:20]   --->   Operation 20 'zext' 'zext_ln20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%cos_lut_addr = getelementptr i32 %cos_lut, i64 0, i64 %zext_ln20" [inverse_clarke.cpp:20]   --->   Operation 21 'getelementptr' 'cos_lut_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [2/2] (3.25ns)   --->   "%cos_theta = load i10 %cos_lut_addr" [inverse_clarke.cpp:20]   --->   Operation 22 'load' 'cos_theta' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1023> <ROM>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%sin_lut_addr = getelementptr i32 %sin_lut, i64 0, i64 %zext_ln20" [inverse_clarke.cpp:21]   --->   Operation 23 'getelementptr' 'sin_lut_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [2/2] (3.25ns)   --->   "%sin_theta = load i10 %sin_lut_addr" [inverse_clarke.cpp:21]   --->   Operation 24 'load' 'sin_theta' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1023> <ROM>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 25 [1/2] (3.25ns)   --->   "%cos_theta = load i10 %cos_lut_addr" [inverse_clarke.cpp:20]   --->   Operation 25 'load' 'cos_theta' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1023> <ROM>
ST_3 : Operation 26 [1/2] (3.25ns)   --->   "%sin_theta = load i10 %sin_lut_addr" [inverse_clarke.cpp:21]   --->   Operation 26 'load' 'sin_theta' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 1023> <ROM>

State 4 <SV = 3> <Delay = 3.87>
ST_4 : Operation 27 [1/1] (0.00ns)   --->   "%sext_ln20 = sext i32 %cos_theta" [inverse_clarke.cpp:20]   --->   Operation 27 'sext' 'sext_ln20' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 28 [1/1] (0.00ns)   --->   "%sext_ln21 = sext i32 %sin_theta" [inverse_clarke.cpp:21]   --->   Operation 28 'sext' 'sext_ln21' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 29 [1/1] (0.00ns)   --->   "%sext_ln23 = sext i32 %id" [inverse_clarke.cpp:23]   --->   Operation 29 'sext' 'sext_ln23' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 30 [5/5] (3.87ns)   --->   "%id_cos = mul i63 %sext_ln20, i63 %sext_ln23" [inverse_clarke.cpp:23]   --->   Operation 30 'mul' 'id_cos' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "%sext_ln24 = sext i32 %iq" [inverse_clarke.cpp:24]   --->   Operation 31 'sext' 'sext_ln24' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 32 [5/5] (3.87ns)   --->   "%iq_cos = mul i63 %sext_ln20, i63 %sext_ln24" [inverse_clarke.cpp:24]   --->   Operation 32 'mul' 'iq_cos' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 33 [5/5] (3.87ns)   --->   "%id_sin = mul i63 %sext_ln21, i63 %sext_ln23" [inverse_clarke.cpp:25]   --->   Operation 33 'mul' 'id_sin' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 34 [5/5] (3.87ns)   --->   "%iq_sin = mul i63 %sext_ln21, i63 %sext_ln24" [inverse_clarke.cpp:26]   --->   Operation 34 'mul' 'iq_sin' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 3.87>
ST_5 : Operation 35 [4/5] (3.87ns)   --->   "%id_cos = mul i63 %sext_ln20, i63 %sext_ln23" [inverse_clarke.cpp:23]   --->   Operation 35 'mul' 'id_cos' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 36 [4/5] (3.87ns)   --->   "%iq_cos = mul i63 %sext_ln20, i63 %sext_ln24" [inverse_clarke.cpp:24]   --->   Operation 36 'mul' 'iq_cos' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 37 [4/5] (3.87ns)   --->   "%id_sin = mul i63 %sext_ln21, i63 %sext_ln23" [inverse_clarke.cpp:25]   --->   Operation 37 'mul' 'id_sin' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 38 [4/5] (3.87ns)   --->   "%iq_sin = mul i63 %sext_ln21, i63 %sext_ln24" [inverse_clarke.cpp:26]   --->   Operation 38 'mul' 'iq_sin' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 3.87>
ST_6 : Operation 39 [3/5] (3.87ns)   --->   "%id_cos = mul i63 %sext_ln20, i63 %sext_ln23" [inverse_clarke.cpp:23]   --->   Operation 39 'mul' 'id_cos' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 40 [3/5] (3.87ns)   --->   "%iq_cos = mul i63 %sext_ln20, i63 %sext_ln24" [inverse_clarke.cpp:24]   --->   Operation 40 'mul' 'iq_cos' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 41 [3/5] (3.87ns)   --->   "%id_sin = mul i63 %sext_ln21, i63 %sext_ln23" [inverse_clarke.cpp:25]   --->   Operation 41 'mul' 'id_sin' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 42 [3/5] (3.87ns)   --->   "%iq_sin = mul i63 %sext_ln21, i63 %sext_ln24" [inverse_clarke.cpp:26]   --->   Operation 42 'mul' 'iq_sin' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.87>
ST_7 : Operation 43 [2/5] (3.87ns)   --->   "%id_cos = mul i63 %sext_ln20, i63 %sext_ln23" [inverse_clarke.cpp:23]   --->   Operation 43 'mul' 'id_cos' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 44 [2/5] (3.87ns)   --->   "%iq_cos = mul i63 %sext_ln20, i63 %sext_ln24" [inverse_clarke.cpp:24]   --->   Operation 44 'mul' 'iq_cos' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 45 [2/5] (3.87ns)   --->   "%id_sin = mul i63 %sext_ln21, i63 %sext_ln23" [inverse_clarke.cpp:25]   --->   Operation 45 'mul' 'id_sin' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 46 [2/5] (3.87ns)   --->   "%iq_sin = mul i63 %sext_ln21, i63 %sext_ln24" [inverse_clarke.cpp:26]   --->   Operation 46 'mul' 'iq_sin' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 3.87>
ST_8 : Operation 47 [1/5] (3.87ns)   --->   "%id_cos = mul i63 %sext_ln20, i63 %sext_ln23" [inverse_clarke.cpp:23]   --->   Operation 47 'mul' 'id_cos' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 48 [1/5] (3.87ns)   --->   "%iq_cos = mul i63 %sext_ln20, i63 %sext_ln24" [inverse_clarke.cpp:24]   --->   Operation 48 'mul' 'iq_cos' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 49 [1/5] (3.87ns)   --->   "%id_sin = mul i63 %sext_ln21, i63 %sext_ln23" [inverse_clarke.cpp:25]   --->   Operation 49 'mul' 'id_sin' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 50 [1/5] (3.87ns)   --->   "%iq_sin = mul i63 %sext_ln21, i63 %sext_ln24" [inverse_clarke.cpp:26]   --->   Operation 50 'mul' 'iq_sin' <Predicate = true> <Delay = 3.87> <CoreInst = "Mul_DSP">   --->   Core 5 'Mul_DSP' <Latency = 4> <II = 1> <Delay = 3.87> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 3.49>
ST_9 : Operation 51 [1/1] (3.49ns)   --->   "%sub_ln28 = sub i63 %id_cos, i63 %iq_sin" [inverse_clarke.cpp:28]   --->   Operation 51 'sub' 'sub_ln28' <Predicate = true> <Delay = 3.49> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.49> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 52 [1/1] (0.00ns)   --->   "%xa = partselect i32 @_ssdm_op_PartSelect.i32.i63.i32.i32, i63 %sub_ln28, i32 31, i32 62" [inverse_clarke.cpp:28]   --->   Operation 52 'partselect' 'xa' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 53 [1/1] (3.49ns)   --->   "%add_ln29 = add i63 %id_sin, i63 %iq_cos" [inverse_clarke.cpp:29]   --->   Operation 53 'add' 'add_ln29' <Predicate = true> <Delay = 3.49> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.49> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 54 [1/1] (0.00ns)   --->   "%tmp = partselect i32 @_ssdm_op_PartSelect.i32.i63.i32.i32, i63 %add_ln29, i32 31, i32 62" [inverse_clarke.cpp:31]   --->   Operation 54 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>

State 10 <SV = 9> <Delay = 0.99>
ST_10 : Operation 55 [1/1] (0.00ns)   --->   "%sext_ln31 = sext i32 %xa" [inverse_clarke.cpp:31]   --->   Operation 55 'sext' 'sext_ln31' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 56 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %tmp, i32 0" [inverse_clarke.cpp:31]   --->   Operation 56 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 57 [1/1] (0.99ns)   --->   "%data_out = or i64 %shl_ln, i64 %sext_ln31" [inverse_clarke.cpp:31]   --->   Operation 57 'or' 'data_out' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 58 [2/2] (0.00ns)   --->   "%write_ln173 = write void @_ssdm_op_Write.axis.volatile.i64P128A, i64 %vectors, i64 %data_out" [C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/hls_stream_39.h:173]   --->   Operation 58 'write' 'write_ln173' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 11 <SV = 10> <Delay = 0.00>
ST_11 : Operation 59 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2"   --->   Operation 59 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 60 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %idq, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 60 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 61 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %idq"   --->   Operation 61 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 62 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %theta, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 62 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 63 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %theta"   --->   Operation 63 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 64 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %vectors, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 64 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 65 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %vectors"   --->   Operation 65 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 66 [1/2] (0.00ns)   --->   "%write_ln173 = write void @_ssdm_op_Write.axis.volatile.i64P128A, i64 %vectors, i64 %data_out" [C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/hls_stream_39.h:173]   --->   Operation 66 'write' 'write_ln173' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_11 : Operation 67 [1/1] (0.00ns)   --->   "%ret_ln33 = ret" [inverse_clarke.cpp:33]   --->   Operation 67 'ret' 'ret_ln33' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 1.35ns.

 <State 1>: 2.11ns
The critical path consists of the following:
	axis read operation ('tmp', C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/hls_stream_39.h:144) on port 'theta' (C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/hls_stream_39.h:144) [16]  (0 ns)
	'icmp' operation ('icmp_ln18', inverse_clarke.cpp:18) [19]  (1.43 ns)
	'select' operation ('theta_clamped', inverse_clarke.cpp:18) [20]  (0.687 ns)

 <State 2>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('cos_lut_addr', inverse_clarke.cpp:20) [22]  (0 ns)
	'load' operation ('cos_theta', inverse_clarke.cpp:20) on array 'cos_lut' [23]  (3.25 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'load' operation ('cos_theta', inverse_clarke.cpp:20) on array 'cos_lut' [23]  (3.25 ns)

 <State 4>: 3.87ns
The critical path consists of the following:
	'mul' operation ('id_cos', inverse_clarke.cpp:23) [29]  (3.87 ns)

 <State 5>: 3.87ns
The critical path consists of the following:
	'mul' operation ('id_cos', inverse_clarke.cpp:23) [29]  (3.87 ns)

 <State 6>: 3.87ns
The critical path consists of the following:
	'mul' operation ('id_cos', inverse_clarke.cpp:23) [29]  (3.87 ns)

 <State 7>: 3.87ns
The critical path consists of the following:
	'mul' operation ('id_cos', inverse_clarke.cpp:23) [29]  (3.87 ns)

 <State 8>: 3.87ns
The critical path consists of the following:
	'mul' operation ('id_cos', inverse_clarke.cpp:23) [29]  (3.87 ns)

 <State 9>: 3.49ns
The critical path consists of the following:
	'sub' operation ('sub_ln28', inverse_clarke.cpp:28) [34]  (3.49 ns)

 <State 10>: 0.99ns
The critical path consists of the following:
	'or' operation ('data_out', inverse_clarke.cpp:31) [40]  (0.99 ns)

 <State 11>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
