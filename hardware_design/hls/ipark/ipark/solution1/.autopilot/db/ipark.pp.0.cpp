# 1 "ipark.cpp"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 395 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h" 1
# 154 "C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h"
extern "C" {






    void _ssdm_op_IfRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_IfWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_IfNbRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_IfNbWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_IfCanRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_IfCanWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));


    void _ssdm_StreamRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_StreamWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_StreamNbRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_StreamNbWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_StreamCanRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_StreamCanWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned _ssdm_StreamSize(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_ReadReq(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_Read(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_WriteReq(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_Write(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_NbReadReq(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_NbWriteReq(...) __attribute__ ((nothrow)) __attribute__((overloadable));




    void _ssdm_op_MemShiftRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_PrintNone(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_PrintInt(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_PrintDouble(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_Wait(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_Poll(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_Return(...) __attribute__ ((nothrow)) __attribute__((overloadable));


    void _ssdm_op_SpecSynModule(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecTopModule(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecProcessDecl(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecProcessDef(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecPort(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecConnection(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecChannel(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecSensitive(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecModuleInst(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecPortMap(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecReset(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecPlatform(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecClockDomain(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecPowerDomain(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    int _ssdm_op_SpecRegionBegin(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    int _ssdm_op_SpecRegionEnd(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecLoopName(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecLoopTripCount(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    int _ssdm_op_SpecStateBegin(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    int _ssdm_op_SpecStateEnd(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecInterface(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecPipeline(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecDataflowPipeline(...) __attribute__ ((nothrow)) __attribute__((overloadable));


    void _ssdm_op_SpecLatency(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecParallel(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecProtocol(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecOccurrence(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecResource(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecResourceLimit(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecCHCore(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecFUCore(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecIFCore(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecIPCore(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecKeepValue(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecMemCore(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecExt(...) __attribute__ ((nothrow)) __attribute__((overloadable));




    void _ssdm_SpecArrayDimSize(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_RegionBegin(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_RegionEnd(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_Unroll(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_UnrollRegion(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_InlineAll(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_InlineLoop(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_Inline(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_InlineSelf(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_InlineRegion(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecArrayMap(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecArrayPartition(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecArrayReshape(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecStream(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecStable(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecStableContent(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecBindPort(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecPipoDepth(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecExpr(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecExprBalance(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecDependence(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecLoopMerge(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecLoopFlatten(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecLoopRewind(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecFuncInstantiation(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecFuncBuffer(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecFuncExtract(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecConstant(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_DataPack(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecDataPack(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecBitsMap(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecLicense(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void __xilinx_ip_top(...) __attribute__ ((nothrow)) __attribute__((overloadable));


}
# 2 "<built-in>" 2
# 1 "ipark.cpp" 2
# 1 "./ipark.h" 1


# 1 "C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\\hls_stream.h" 1
# 61 "C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\\hls_stream.h"
# 1 "C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/hls_stream_39.h" 1
# 72 "C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/hls_stream_39.h"
namespace hls {
# 94 "C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/hls_stream_39.h"
template<typename __STREAM_T__, int DEPTH=0>
class stream;

template<typename __STREAM_T__>
class stream<__STREAM_T__, 0>
{
  public:

    inline __attribute__((always_inline)) stream() {
      __fpga_set_stream_depth(&this->V, 0);
    }

    inline __attribute__((always_inline)) stream(const char* name) {
      (void)(name);
      __fpga_set_stream_depth(&this->V, 0);
    }


  private:
    inline __attribute__((always_inline)) stream(const stream< __STREAM_T__ >& chn):V(chn.V) {
    }

    inline __attribute__((always_inline)) stream& operator= (const stream< __STREAM_T__ >& chn) {
        V = chn.V;
        return *this;
    }

  public:

    inline __attribute__((always_inline)) void operator >> (__STREAM_T__& rdata) {
        read(rdata);
    }

    inline __attribute__((always_inline)) void operator << (const __STREAM_T__& wdata) {
        write(wdata);
    }


  public:

    inline __attribute__((always_inline)) bool empty() const {
        return !__fpga_fifo_not_empty(&V);
    }

    inline __attribute__((always_inline)) bool full() const {
        return !__fpga_fifo_not_full(&V);
    }


    inline __attribute__((always_inline)) void read(__STREAM_T__& dout) {
        __fpga_fifo_pop(&V, &dout);
    }


    inline __attribute__((noinline)) bool read_dep(__STREAM_T__& dout, volatile bool flag) {
        __fpga_fifo_pop(&V, &dout);
        return flag;
    }

    inline __attribute__((always_inline)) __STREAM_T__ read() {
        __STREAM_T__ tmp;
        read(tmp);
        return tmp;
    }


    inline __attribute__((always_inline)) bool read_nb(__STREAM_T__& dout) {
        __STREAM_T__ tmp;

        if (__fpga_fifo_nb_pop(&V, &tmp)) {
            dout = tmp;
            return true;
        } else {
            return false;
        }
    }


    inline __attribute__((always_inline)) void write(const __STREAM_T__& din) {
        __fpga_fifo_push(&V, &din);
    }


    inline __attribute__((noinline)) bool write_dep(const __STREAM_T__& din, volatile bool flag) {
        __fpga_fifo_push(&V, &din);
        return flag;
    }


    inline __attribute__((always_inline)) bool write_nb(const __STREAM_T__& din) {
        return __fpga_fifo_nb_push(&V, &din);
    }


    void set_name(const char* name) { (void)(name); }

  public:
    __STREAM_T__ V __attribute__((no_ctor));
};

template<typename __STREAM_T__, int DEPTH>
class stream : public stream<__STREAM_T__, 0> {
  public:
    inline __attribute__((always_inline)) stream() {
      __fpga_set_stream_depth(&this->V, DEPTH);
    }

    inline __attribute__((always_inline)) stream(const char* name) {
      (void)(name);
      __fpga_set_stream_depth(&this->V, DEPTH);
    }
};
}
# 62 "C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\\hls_stream.h" 2
# 4 "./ipark.h" 2
# 1 "./trig_lookup.h" 1


# 1 "C:\\Xilinx\\Vitis_HLS\\2021.2\\win64\\tools\\clang-3.9-csynth\\lib\\clang\\7.0.0\\include\\stdint.h" 1 3
# 63 "C:\\Xilinx\\Vitis_HLS\\2021.2\\win64\\tools\\clang-3.9-csynth\\lib\\clang\\7.0.0\\include\\stdint.h" 3
# 1 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\stdint.h" 1 3
# 28 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\stdint.h" 3
# 1 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\crtdefs.h" 1 3
# 10 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\crtdefs.h" 3
# 1 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 1 3
# 12 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 3
# 1 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include/_mingw_mac.h" 1 3
# 13 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 2 3
# 1 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include/_mingw_secapi.h" 1 3
# 44 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include/_mingw_secapi.h" 3
extern "C++" {
template <bool __test, typename __dsttype>
  struct __if_array;
template <typename __dsttype>
  struct __if_array <true, __dsttype> {
    typedef __dsttype __type;
};
}
# 14 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 2 3
# 275 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 3
# 1 "C:\\Xilinx\\Vitis_HLS\\2021.2\\win64\\tools\\clang-3.9-csynth\\lib\\clang\\7.0.0\\include\\vadefs.h" 1 3
# 26 "C:\\Xilinx\\Vitis_HLS\\2021.2\\win64\\tools\\clang-3.9-csynth\\lib\\clang\\7.0.0\\include\\vadefs.h" 3
# 1 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\vadefs.h" 1 3








# 1 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 1 3
# 565 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 3
# 1 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include/sdks/_mingw_directx.h" 1 3
# 566 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 2 3
# 1 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include/sdks/_mingw_ddk.h" 1 3
# 567 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 2 3
# 10 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\vadefs.h" 2 3




#pragma pack(push,_CRT_PACKING)



extern "C" {





  typedef __builtin_va_list __gnuc_va_list;






  typedef __gnuc_va_list va_list;
# 99 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\vadefs.h" 3
}



#pragma pack(pop)
# 27 "C:\\Xilinx\\Vitis_HLS\\2021.2\\win64\\tools\\clang-3.9-csynth\\lib\\clang\\7.0.0\\include\\vadefs.h" 2 3
# 276 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 2 3
# 534 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 3
extern "C" {
# 548 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\_mingw.h" 3
const char *__mingw_get_crt_info (void);


}
# 11 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\crtdefs.h" 2 3




#pragma pack(push,_CRT_PACKING)
# 35 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\crtdefs.h" 3
__extension__ typedef unsigned long size_t;
# 45 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\crtdefs.h" 3
__extension__ typedef long ssize_t;






typedef size_t rsize_t;
# 62 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\crtdefs.h" 3
__extension__ typedef long intptr_t;
# 75 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\crtdefs.h" 3
__extension__ typedef unsigned long uintptr_t;
# 88 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\crtdefs.h" 3
__extension__ typedef long ptrdiff_t;
# 106 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\crtdefs.h" 3
typedef unsigned short wint_t;
typedef unsigned short wctype_t;





typedef int errno_t;




typedef long __time32_t;




__extension__ typedef long __time64_t;
# 138 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\crtdefs.h" 3
typedef __time64_t time_t;
# 422 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\crtdefs.h" 3
struct threadlocaleinfostruct;
struct threadmbcinfostruct;
typedef struct threadlocaleinfostruct *pthreadlocinfo;
typedef struct threadmbcinfostruct *pthreadmbcinfo;
struct __lc_time_data;

typedef struct localeinfo_struct {
  pthreadlocinfo locinfo;
  pthreadmbcinfo mbcinfo;
} _locale_tstruct,*_locale_t;



typedef struct tagLC_ID {
  unsigned short wLanguage;
  unsigned short wCountry;
  unsigned short wCodePage;
} LC_ID,*LPLC_ID;




typedef struct threadlocaleinfostruct {
  int refcount;
  unsigned int lc_codepage;
  unsigned int lc_collate_cp;
  unsigned long lc_handle[6];
  LC_ID lc_id[6];
  struct {
    char *locale;
    wchar_t *wlocale;
    int *refcount;
    int *wrefcount;
  } lc_category[6];
  int lc_clike;
  int mb_cur_max;
  int *lconv_intl_refcount;
  int *lconv_num_refcount;
  int *lconv_mon_refcount;
  struct lconv *lconv;
  int *ctype1_refcount;
  unsigned short *ctype1;
  const unsigned short *pctype;
  const unsigned char *pclmap;
  const unsigned char *pcumap;
  struct __lc_time_data *lc_time_curr;
} threadlocinfo;







#pragma pack(pop)
# 29 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\stdint.h" 2 3



# 1 "C:\\Xilinx\\Vitis_HLS\\2021.2\\win64\\tools\\clang-3.9-csynth\\lib\\clang\\7.0.0\\include\\stddef.h" 1 3
# 33 "C:/Xilinx/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\\x86_64-w64-mingw32\\include\\stdint.h" 2 3


typedef signed char int8_t;
typedef unsigned char uint8_t;
typedef short int16_t;
typedef unsigned short uint16_t;
typedef int int32_t;
typedef unsigned uint32_t;
__extension__ typedef long long int64_t;
__extension__ typedef unsigned long long uint64_t;


typedef signed char int_least8_t;
typedef unsigned char uint_least8_t;
typedef short int_least16_t;
typedef unsigned short uint_least16_t;
typedef int int_least32_t;
typedef unsigned uint_least32_t;
__extension__ typedef long long int_least64_t;
__extension__ typedef unsigned long long uint_least64_t;





typedef signed char int_fast8_t;
typedef unsigned char uint_fast8_t;
typedef short int_fast16_t;
typedef unsigned short uint_fast16_t;
typedef int int_fast32_t;
typedef unsigned int uint_fast32_t;
__extension__ typedef long long int_fast64_t;
__extension__ typedef unsigned long long uint_fast64_t;


__extension__ typedef long long intmax_t;
__extension__ typedef unsigned long long uintmax_t;
# 64 "C:\\Xilinx\\Vitis_HLS\\2021.2\\win64\\tools\\clang-3.9-csynth\\lib\\clang\\7.0.0\\include\\stdint.h" 2 3
# 4 "./trig_lookup.h" 2
int32_t sin_lut[1023] = {0,13189592,26378686,39566786,52753393,65938010,79120140,92299285,105474948,118646632,131813841,144976077,158132844,171283646,184427987,197565370,210695301,223817283,236930823,250035425,263130594,276215838,289290662,302354573,315407078,328447685,341475902,354491237,367493200,380481300,393455047,406413952,419357526,432285280,445196727,458091379,470968752,483828357,496669712,509492330,522295729,535079425,547842936,560585781,573307479,586007550,598685515,611340896,623973215,636581996,649166763,661727041,674262358,686772238,699256212,711713808,724144555,736547986,748923632,761271026,773589702,785879197,798139045,810368786,822567957,834736098,846872750,858977455,871049757,883089201,895095332,907067697,919005844,930909324,942777687,954610486,966407274,978167605,989891038,1001577129,1013225437,1024835523,1036406949,1047939279,1059432077,1070884910,1082297346,1093668955,1104999307,1116287975,1127534533,1138738557,1149899625,1161017314,1172091207,1183120884,1194105931,1205045932,1215940476,1226789150,1237591546,1248347256,1259055875,1269716998,1280330224,1290895151,1301411382,1311878520,1322296170,1332663939,1342981435,1353248270,1363464057,1373628409,1383740944,1393801280,1403809037,1413763839,1423665309,1433513074,1443306762,1453046004,1462730433,1472359684,1481933392,1491451197,1500912741,1510317665,1519665615,1528956239,1538189186,1547364108,1556480658,1565538493,1574537271,1583476653,1592356301,1601175881,1609935059,1618633506,1627270893,1635846894,1644361186,1652813447,1661203360,1669530606,1677794873,1685995848,1694133223,1702206689,1710215943,1718160682,1726040607,1733855421,1741604828,1749288536,1756906256,1764457700,1771942583,1779360623,1786711540,1793995057,1801210899,1808358793,1815438471,1822449665,1829392110,1836265546,1843069711,1849804350,1856469209,1863064036,1869588583,1876042603,1882425853,1888738092,1894979082,1901148588,1907246377,1913272218,1919225885,1925107152,1930915799,1936651605,1942314356,1947903836,1953419835,1958862145,1964230561,1969524880,1974744902,1979890431,1984961273,1989957235,1994878131,1999723773,2004493980,2009188571,2013807369,2018350200,2022816893,2027207279,2031521192,2035758470,2039918953,2044002484,2048008909,2051938077,2055789840,2059564051,2063260570,2066879256,2070419973,2073882587,2077266969,2080572989,2083800524,2086949451,2090019652,2093011011,2095923416,2098756755,2101510923,2104185816,2106781332,2109297374,2111733847,2114090659,2116367721,2118564947,2120682254,2122719562,2124676795,2126553878,2128350742,2130067317,2131703540,2133259348,2134734684,2136129490,2137443715,2138677309,2139830226,2140902422,2141893856,2142804491,2143634294,2144383231,2145051276,2145638404,2146144591,2146569818,2146914071,2147177335,2147359602,2147460863,2147481115,2147420358,2147278594,2147055827,2146752067,2146367325,2145901616,2145354956,2144727367,2144018872,2143229499,2142359276,2141408236,2140376417,2139263855,2138070594,2136796679,2135442156,2134007079,2132491500,2130895477,2129219070,2127462342,2125625360,2123708193,2121710913,2119633595,2117476318,2115239164,2112922216,2110525563,2108049294,2105493502,2102858286,2100143742,2097349975,2094477090,2091525194,2088494400,2085384821,2082196575,2078929782,2075584565,2072161051,2068659369,2065079651,2061422031,2057686648,2053873643,2049983160,2046015345,2041970348,2037848321,2033649421,2029373805,2025021634,2020593074,2016088291,2011507455,2006850738,2002118317,1997310370,1992427078,1987468626,1982435200,1977326991,1972144190,1966886995,1961555602,1956150214,1950671033,1945118268,1939492126,1933792821,1928020567,1922175582,1916258087,1910268305,1904206461,1898072785,1891867508,1885590864,1879243090,1872824424,1866335110,1859775392,1853145518,1846445737,1839676303,1832837471,1825929498,1818952645,1811907176,1804793356,1797611454,1790361741,1783044489,1775659976,1768208479,1760690280,1753105663,1745454912,1737738318,1729956171,1722108765,1714196396,1706219361,1698177963,1690072505,1681903292,1673670632,1665374836,1657016217,1648595090,1640111773,1631566587,1622959852,1614291894,1605563041,1596773620,1587923965,1579014408,1570045285,1561016936,1551929701,1542783922,1533579944,1524318115,1514998784,1505622302,1496189024,1486699305,1477153503,1467551979,1457895093,1448183212,1438416700,1428595928,1418721264,1408793081,1398811755,1388777661,1378691178,1368552686,1358362569,1348121210,1337828995,1327486314,1317093556,1306651113,1296159379,1285618750,1275029623,1264392398,1253707477,1242975262,1232196158,1221370572,1210498912,1199581588,1188619012,1177611598,1166559761,1155463918,1144324487,1133141888,1121916544,1110648878,1099339315,1087988281,1076596205,1065163516,1053690646,1042178028,1030626096,1019035285,1007406033,995738779,984033962,972292024,960513409,948698560,936847923,924961946,913041076,901085763,889096459,877073615,865017685,852929124,840808388,828655934,816472221,804257708,792012856,779738126,767433983,755100889,742739311,730349715,717932567,705488337,693017493,680520507,667997849,655449993,642877411,630280577,617659968,605016058,592349326,579660248,566949303,554216972,541463734,528690070,515896462,503083393,490251346,477400806,464532256,451646183,438743072,425823411,412887686,399936386,386969998,373989014,360993921,347985210,334963373,321928899,308882282,295824012,282754583,269674488,256584219,243484272,230375140,217257317,204131298,190997579,177856655,164709022,151555175,138395611,125230827,112061318,98887583,85710116,72529417,59345981,46160307,32972892,19784232,6594827,-6594827,-19784232,-32972892,-46160307,-59345981,-72529417,-85710116,-98887583,-112061318,-125230827,-138395611,-151555175,-164709022,-177856655,-190997579,-204131298,-217257317,-230375140,-243484272,-256584219,-269674488,-282754583,-295824012,-308882282,-321928899,-334963373,-347985210,-360993921,-373989014,-386969998,-399936386,-412887686,-425823411,-438743072,-451646183,-464532256,-477400806,-490251346,-503083393,-515896462,-528690070,-541463734,-554216972,-566949303,-579660248,-592349326,-605016058,-617659968,-630280577,-642877411,-655449993,-667997849,-680520507,-693017493,-705488337,-717932567,-730349715,-742739311,-755100889,-767433983,-779738126,-792012856,-804257708,-816472221,-828655934,-840808388,-852929124,-865017685,-877073615,-889096459,-901085763,-913041076,-924961946,-936847923,-948698560,-960513409,-972292024,-984033962,-995738779,-1007406033,-1019035285,-1030626096,-1042178028,-1053690646,-1065163516,-1076596205,-1087988281,-1099339315,-1110648878,-1121916544,-1133141888,-1144324487,-1155463918,-1166559761,-1177611598,-1188619012,-1199581588,-1210498912,-1221370572,-1232196158,-1242975262,-1253707477,-1264392398,-1275029623,-1285618750,-1296159379,-1306651113,-1317093556,-1327486314,-1337828995,-1348121210,-1358362569,-1368552686,-1378691178,-1388777661,-1398811755,-1408793081,-1418721264,-1428595928,-1438416700,-1448183212,-1457895093,-1467551979,-1477153503,-1486699305,-1496189024,-1505622302,-1514998784,-1524318115,-1533579944,-1542783922,-1551929701,-1561016936,-1570045285,-1579014408,-1587923965,-1596773620,-1605563041,-1614291894,-1622959852,-1631566587,-1640111773,-1648595090,-1657016217,-1665374836,-1673670632,-1681903292,-1690072505,-1698177963,-1706219361,-1714196396,-1722108765,-1729956171,-1737738318,-1745454912,-1753105663,-1760690280,-1768208479,-1775659976,-1783044489,-1790361741,-1797611454,-1804793356,-1811907176,-1818952645,-1825929498,-1832837471,-1839676303,-1846445737,-1853145518,-1859775392,-1866335110,-1872824424,-1879243090,-1885590864,-1891867508,-1898072785,-1904206461,-1910268305,-1916258087,-1922175582,-1928020567,-1933792821,-1939492126,-1945118268,-1950671033,-1956150214,-1961555602,-1966886995,-1972144190,-1977326991,-1982435200,-1987468626,-1992427078,-1997310370,-2002118317,-2006850738,-2011507455,-2016088291,-2020593074,-2025021634,-2029373805,-2033649421,-2037848321,-2041970348,-2046015345,-2049983160,-2053873643,-2057686648,-2061422031,-2065079651,-2068659369,-2072161051,-2075584565,-2078929782,-2082196575,-2085384821,-2088494400,-2091525194,-2094477090,-2097349975,-2100143742,-2102858286,-2105493502,-2108049294,-2110525563,-2112922216,-2115239164,-2117476318,-2119633595,-2121710913,-2123708193,-2125625360,-2127462342,-2129219070,-2130895477,-2132491500,-2134007079,-2135442156,-2136796679,-2138070594,-2139263855,-2140376417,-2141408236,-2142359276,-2143229499,-2144018872,-2144727367,-2145354956,-2145901616,-2146367325,-2146752067,-2147055827,-2147278594,-2147420358,-2147481115,-2147460863,-2147359602,-2147177335,-2146914071,-2146569818,-2146144591,-2145638404,-2145051276,-2144383231,-2143634294,-2142804491,-2141893856,-2140902422,-2139830226,-2138677309,-2137443715,-2136129490,-2134734684,-2133259348,-2131703540,-2130067317,-2128350742,-2126553878,-2124676795,-2122719562,-2120682254,-2118564947,-2116367721,-2114090659,-2111733847,-2109297374,-2106781332,-2104185816,-2101510923,-2098756755,-2095923416,-2093011011,-2090019652,-2086949451,-2083800524,-2080572989,-2077266969,-2073882587,-2070419973,-2066879256,-2063260570,-2059564051,-2055789840,-2051938077,-2048008909,-2044002484,-2039918953,-2035758470,-2031521192,-2027207279,-2022816893,-2018350200,-2013807369,-2009188571,-2004493980,-1999723773,-1994878131,-1989957235,-1984961273,-1979890431,-1974744902,-1969524880,-1964230561,-1958862145,-1953419835,-1947903836,-1942314356,-1936651605,-1930915799,-1925107152,-1919225885,-1913272218,-1907246377,-1901148588,-1894979082,-1888738092,-1882425853,-1876042603,-1869588583,-1863064036,-1856469209,-1849804350,-1843069711,-1836265546,-1829392110,-1822449665,-1815438471,-1808358793,-1801210899,-1793995057,-1786711540,-1779360623,-1771942583,-1764457700,-1756906256,-1749288536,-1741604828,-1733855421,-1726040607,-1718160682,-1710215943,-1702206689,-1694133223,-1685995848,-1677794873,-1669530606,-1661203360,-1652813447,-1644361186,-1635846894,-1627270893,-1618633506,-1609935059,-1601175881,-1592356301,-1583476653,-1574537271,-1565538493,-1556480658,-1547364108,-1538189186,-1528956239,-1519665615,-1510317665,-1500912741,-1491451197,-1481933392,-1472359684,-1462730433,-1453046004,-1443306762,-1433513074,-1423665309,-1413763839,-1403809037,-1393801280,-1383740944,-1373628409,-1363464057,-1353248270,-1342981435,-1332663939,-1322296170,-1311878520,-1301411382,-1290895151,-1280330224,-1269716998,-1259055875,-1248347256,-1237591546,-1226789150,-1215940476,-1205045932,-1194105931,-1183120884,-1172091207,-1161017314,-1149899625,-1138738557,-1127534533,-1116287975,-1104999307,-1093668955,-1082297346,-1070884910,-1059432077,-1047939279,-1036406949,-1024835523,-1013225437,-1001577129,-989891038,-978167605,-966407274,-954610486,-942777687,-930909324,-919005844,-907067697,-895095332,-883089201,-871049757,-858977455,-846872750,-834736098,-822567957,-810368786,-798139045,-785879197,-773589702,-761271026,-748923632,-736547986,-724144555,-711713808,-699256212,-686772238,-674262358,-661727041,-649166763,-636581996,-623973215,-611340896,-598685515,-586007550,-573307479,-560585781,-547842936,-535079425,-522295729,-509492330,-496669712,-483828357,-470968752,-458091379,-445196727,-432285280,-419357526,-406413952,-393455047,-380481300,-367493200,-354491237,-341475902,-328447685,-315407078,-302354573,-289290662,-276215838,-263130594,-250035425,-236930823,-223817283,-210695301,-197565370,-184427987,-171283646,-158132844,-144976077,-131813841,-118646632,-105474948,-92299285,-79120140,-65938010,-52753393,-39566786,-26378686,-13189592};
int32_t cos_lut[1023] = {2147483647,2147443142,2147321629,2147119113,2146835600,2146471102,2146025633,2145499209,2144891850,2144203580,2143434423,2142584409,2141653571,2140641943,2139549563,2138376473,2137122716,2135788341,2134373397,2132877938,2131302021,2129645704,2127909050,2126092126,2124194998,2122217739,2120160424,2118023129,2115805937,2113508929,2111132194,2108675820,2106139900,2103524531,2100829809,2098055839,2095202723,2092270569,2089259489,2086169595,2083001005,2079753837,2076428215,2073024263,2069542111,2065981889,2062343732,2058627777,2054834164,2050963036,2047014540,2042988824,2038886041,2034706344,2030449892,2026116845,2021707367,2017221623,2012659784,2008022021,2003308510,1998519427,1993654955,1988715275,1983700575,1978611043,1973446873,1968208258,1962895395,1957508487,1952047735,1946513346,1940905529,1935224494,1929470457,1923643635,1917744247,1911772515,1905728666,1899612926,1893425527,1887166703,1880836689,1874435723,1867964049,1861421909,1854809550,1848127223,1841375178,1834553671,1827662959,1820703301,1813674962,1806578205,1799413298,1792180512,1784880119,1777512395,1770077618,1762576068,1755008028,1747373784,1739673624,1731907838,1724076719,1716180562,1708219666,1700194330,1692104858,1683951555,1675734728,1667454687,1659111744,1650706215,1642238415,1633708666,1625117288,1616464606,1607750945,1598976636,1590142008,1581247394,1572293132,1563279558,1554207011,1545075836,1535886375,1526638977,1517333988,1507971761,1498552649,1489077007,1479545192,1469957564,1460314485,1450616318,1440863430,1431056188,1421194962,1411280124,1401312048,1391291110,1381217689,1371092164,1360914917,1350686332,1340406795,1330076694,1319696419,1309266360,1298786912,1288258469,1277681430,1267056192,1256383157,1245662727,1234895308,1224081304,1213221124,1202315178,1191363876,1180367633,1169326862,1158241981,1147113408,1135941562,1124726864,1113469739,1102170610,1090829904,1079448048,1068025472,1056562607,1045059885,1033517741,1021936609,1010316926,998659131,986963663,975230964,963461477,951655645,939813913,927936729,916024540,904077796,892096947,880082445,868034745,855954299,843841564,831696996,819521055,807314199,795076888,782809584,770512751,758186851,745832351,733449715,721039411,708601908,696137673,683647179,671130895,658589293,646022848,633432033,620817323,608179194,595518122,582834586,570129063,557402034,544653977,531885374,519096707,506288458,493461111,480615148,467751055,454869317,441970420,429054851,416123096,403175644,390212983,377235602,364243990,351238638,338220036,325188675,312145048,299089645,286022960,272945485,259857713,246760139,233653257,220537560,207413544,194281704,181142534,167996532,154844192,141686011,128522485,115354111,102181386,89004805,75824868,62642070,49456908,36269882,23081487,9892221,-3297417,-16486932,-29675824,-42863597,-56049753,-69233795,-82415225,-95593546,-108768261,-121938873,-135104885,-148265801,-161421123,-174570356,-187713004,-200848571,-213976561,-227096479,-240207831,-253310121,-266402855,-279485540,-292557682,-305618787,-318668364,-331705920,-344730963,-357743001,-370741544,-383726102,-396696184,-409651302,-422590966,-435514689,-448421983,-461312361,-474185338,-487040426,-499877142,-512695000,-525493519,-538272214,-551030604,-563768207,-576484543,-589179132,-601851496,-614501156,-627127635,-639730457,-652309147,-664863229,-677392231,-689895679,-702373102,-714824030,-727247992,-739644520,-752013147,-764353405,-776664830,-788946956,-801199321,-813421462,-825612919,-837773231,-849901939,-861998586,-874062717,-886093874,-898091606,-910055459,-921984982,-933879725,-945739238,-957563076,-969350792,-981101940,-992816079,-1004492765,-1016131559,-1027732021,-1039293714,-1050816201,-1062299049,-1073741823,-1085144093,-1096505427,-1107825398,-1119103579,-1130339543,-1141532868,-1152683130,-1163789910,-1174852787,-1185871346,-1196845170,-1207773846,-1218656960,-1229494103,-1240284866,-1251028841,-1261725624,-1272374810,-1282975999,-1293528790,-1304032785,-1314487588,-1324892804,-1335248041,-1345552909,-1355807018,-1366009982,-1376161416,-1386260936,-1396308163,-1406302717,-1416244221,-1426132299,-1435966580,-1445746691,-1455472265,-1465142933,-1474758332,-1484318098,-1493821872,-1503269294,-1512660007,-1521993659,-1531269897,-1540488370,-1549648731,-1558750635,-1567793737,-1576777698,-1585702178,-1594566841,-1603371351,-1612115377,-1620798590,-1629420660,-1637981264,-1646480079,-1654916783,-1663291058,-1671602590,-1679851063,-1688036167,-1696157593,-1704215034,-1712208188,-1720136752,-1728000426,-1735798916,-1743531925,-1751199164,-1758800342,-1766335172,-1773803371,-1781204656,-1788538749,-1795805373,-1803004253,-1810135119,-1817197700,-1824191732,-1831116949,-1837973091,-1844759899,-1851477117,-1858124491,-1864701772,-1871208710,-1877645060,-1884010580,-1890305029,-1896528170,-1902679768,-1908759591,-1914767410,-1920702998,-1926566131,-1932356588,-1938074150,-1943718603,-1949289732,-1954787329,-1960211184,-1965561095,-1970836858,-1976038276,-1981165151,-1986217291,-1991194504,-1996096603,-2000923404,-2005674723,-2010350382,-2014950205,-2019474018,-2023921649,-2028292933,-2032587702,-2036805797,-2040947056,-2045011325,-2048998450,-2052908280,-2056740669,-2060495470,-2064172544,-2067771750,-2071292954,-2074736022,-2078100825,-2081387235,-2084595130,-2087724386,-2090774888,-2093746519,-2096639167,-2099452724,-2102187083,-2104842141,-2107417797,-2109913956,-2112330522,-2114667404,-2116924515,-2119101769,-2121199084,-2123216380,-2125153583,-2127010618,-2128787415,-2130483909,-2132100033,-2133635729,-2135090937,-2136465603,-2137759675,-2138973104,-2140105844,-2141157853,-2142129091,-2143019521,-2143829110,-2144557827,-2145205645,-2145772539,-2146258488,-2146663474,-2146987480,-2147230496,-2147392511,-2147473521,-2147473521,-2147392511,-2147230496,-2146987480,-2146663474,-2146258488,-2145772539,-2145205645,-2144557827,-2143829110,-2143019521,-2142129091,-2141157853,-2140105844,-2138973104,-2137759675,-2136465603,-2135090937,-2133635729,-2132100033,-2130483909,-2128787415,-2127010618,-2125153583,-2123216380,-2121199084,-2119101769,-2116924515,-2114667404,-2112330522,-2109913956,-2107417797,-2104842141,-2102187083,-2099452724,-2096639167,-2093746519,-2090774888,-2087724386,-2084595130,-2081387235,-2078100825,-2074736022,-2071292954,-2067771750,-2064172544,-2060495470,-2056740669,-2052908280,-2048998450,-2045011325,-2040947056,-2036805797,-2032587702,-2028292933,-2023921649,-2019474018,-2014950205,-2010350382,-2005674723,-2000923404,-1996096603,-1991194504,-1986217291,-1981165151,-1976038276,-1970836858,-1965561095,-1960211184,-1954787329,-1949289732,-1943718603,-1938074150,-1932356588,-1926566131,-1920702998,-1914767410,-1908759591,-1902679768,-1896528170,-1890305029,-1884010580,-1877645060,-1871208710,-1864701772,-1858124491,-1851477117,-1844759899,-1837973091,-1831116949,-1824191732,-1817197700,-1810135119,-1803004253,-1795805373,-1788538749,-1781204656,-1773803371,-1766335172,-1758800342,-1751199164,-1743531925,-1735798916,-1728000426,-1720136752,-1712208188,-1704215034,-1696157593,-1688036167,-1679851063,-1671602590,-1663291058,-1654916783,-1646480079,-1637981264,-1629420660,-1620798590,-1612115377,-1603371351,-1594566841,-1585702178,-1576777698,-1567793737,-1558750635,-1549648731,-1540488370,-1531269897,-1521993659,-1512660007,-1503269294,-1493821872,-1484318098,-1474758332,-1465142933,-1455472265,-1445746691,-1435966580,-1426132299,-1416244221,-1406302717,-1396308163,-1386260936,-1376161416,-1366009982,-1355807018,-1345552909,-1335248041,-1324892804,-1314487588,-1304032785,-1293528790,-1282975999,-1272374810,-1261725624,-1251028841,-1240284866,-1229494103,-1218656960,-1207773846,-1196845170,-1185871346,-1174852787,-1163789910,-1152683130,-1141532868,-1130339543,-1119103579,-1107825398,-1096505427,-1085144093,-1073741823,-1062299049,-1050816201,-1039293714,-1027732021,-1016131559,-1004492765,-992816079,-981101940,-969350792,-957563076,-945739238,-933879725,-921984982,-910055459,-898091606,-886093874,-874062717,-861998586,-849901939,-837773231,-825612919,-813421462,-801199321,-788946956,-776664830,-764353405,-752013147,-739644520,-727247992,-714824030,-702373102,-689895679,-677392231,-664863229,-652309147,-639730457,-627127635,-614501156,-601851496,-589179132,-576484543,-563768207,-551030604,-538272214,-525493519,-512695000,-499877142,-487040426,-474185338,-461312361,-448421983,-435514689,-422590966,-409651302,-396696184,-383726102,-370741544,-357743001,-344730963,-331705920,-318668364,-305618787,-292557682,-279485540,-266402855,-253310121,-240207831,-227096479,-213976561,-200848571,-187713004,-174570356,-161421123,-148265801,-135104885,-121938873,-108768261,-95593546,-82415225,-69233795,-56049753,-42863597,-29675824,-16486932,-3297417,9892221,23081487,36269882,49456908,62642070,75824868,89004805,102181386,115354111,128522485,141686011,154844192,167996532,181142534,194281704,207413544,220537560,233653257,246760139,259857713,272945485,286022960,299089645,312145048,325188675,338220036,351238638,364243990,377235602,390212983,403175644,416123096,429054851,441970420,454869317,467751055,480615148,493461111,506288458,519096707,531885374,544653977,557402034,570129063,582834586,595518122,608179194,620817323,633432033,646022848,658589293,671130895,683647179,696137673,708601908,721039411,733449715,745832351,758186851,770512751,782809584,795076888,807314199,819521055,831696996,843841564,855954299,868034745,880082445,892096947,904077796,916024540,927936729,939813913,951655645,963461477,975230964,986963663,998659131,1010316926,1021936609,1033517741,1045059885,1056562607,1068025472,1079448048,1090829904,1102170610,1113469739,1124726864,1135941562,1147113408,1158241981,1169326862,1180367633,1191363876,1202315178,1213221124,1224081304,1234895308,1245662727,1256383157,1267056192,1277681430,1288258469,1298786912,1309266360,1319696419,1330076694,1340406795,1350686332,1360914917,1371092164,1381217689,1391291110,1401312048,1411280124,1421194962,1431056188,1440863430,1450616318,1460314485,1469957564,1479545192,1489077007,1498552649,1507971761,1517333988,1526638977,1535886375,1545075836,1554207011,1563279558,1572293132,1581247394,1590142008,1598976636,1607750945,1616464606,1625117288,1633708666,1642238415,1650706215,1659111744,1667454687,1675734728,1683951555,1692104858,1700194330,1708219666,1716180562,1724076719,1731907838,1739673624,1747373784,1755008028,1762576068,1770077618,1777512395,1784880119,1792180512,1799413298,1806578205,1813674962,1820703301,1827662959,1834553671,1841375178,1848127223,1854809550,1861421909,1867964049,1874435723,1880836689,1887166703,1893425527,1899612926,1905728666,1911772515,1917744247,1923643635,1929470457,1935224494,1940905529,1946513346,1952047735,1957508487,1962895395,1968208258,1973446873,1978611043,1983700575,1988715275,1993654955,1998519427,2003308510,2008022021,2012659784,2017221623,2021707367,2026116845,2030449892,2034706344,2038886041,2042988824,2047014540,2050963036,2054834164,2058627777,2062343732,2065981889,2069542111,2073024263,2076428215,2079753837,2083001005,2086169595,2089259489,2092270569,2095202723,2098055839,2100829809,2103524531,2106139900,2108675820,2111132194,2113508929,2115805937,2118023129,2120160424,2122217739,2124194998,2126092126,2127909050,2129645704,2131302021,2132877938,2134373397,2135788341,2137122716,2138376473,2139549563,2140641943,2141653571,2142584409,2143434423,2144203580,2144891850,2145499209,2146025633,2146471102,2146835600,2147119113,2147321629,2147443142};
# 5 "./ipark.h" 2
__attribute__((sdx_kernel("ipark", 0))) void ipark(hls::stream<uint64_t> &idq, hls::stream<uint16_t> &theta, hls::stream<uint64_t> &vectors);
# 2 "ipark.cpp" 2





using namespace hls;

__attribute__((sdx_kernel("ipark", 0))) void ipark(hls::stream<uint64_t> &idq, hls::stream<uint16_t> &theta, hls::stream<uint64_t> &vectors)
{
#pragma HLSDIRECTIVE TOP name=ipark
# 10 "ipark.cpp"

#pragma HLS INTERFACE mode=axis port=idq
#pragma HLS INTERFACE mode=axis port=theta
#pragma HLS INTERFACE mode=axis port=vectors
 uint64_t data_in = idq.read();
 int32_t id = int32_t(data_in & 0xFFFFFFFF);
 int32_t iq = int32_t((data_in>>32)&0xFFFFFFFF);
 uint16_t tht = theta.read();
 uint16_t theta_clamped = (((uint16_t)(tht) > 1023) ? 1023 : tht);

 int64_t cos_theta = (int64_t)cos_lut[theta_clamped];
 int64_t sin_theta = (int64_t)sin_lut[theta_clamped];

 int64_t id_cos = (int64_t)id*cos_theta;
 int64_t iq_cos = (int64_t)iq*cos_theta;
 int64_t id_sin = (int64_t)id*sin_theta;
 int64_t iq_sin = (int64_t)iq*sin_theta;

 int32_t xa = (int32_t)((id_cos - iq_sin)>>31);
 int32_t xb = (int32_t)((id_sin + iq_cos)>>31);

 uint64_t data_out = ((uint64_t)xa) | (((uint64_t)xb)<<32);
 vectors.write(data_out);
}
